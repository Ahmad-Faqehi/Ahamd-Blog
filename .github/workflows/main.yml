name: Build and Deploy Vue JS Project 
on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:

  build_docker_image:
    name: Build Docker Image üê¨
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@master
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Last Tag for Image
        run: echo "Hello $TAG"
        env:
          TAG: 2
        # run: |
        #   tag=$(wget -q https://registry.hub.docker.com/v1/repositories/ahmad75/blog-vue/tags -O -  | sed -e 's/[][]//g' -e 's/"//g' -e 's/ //g' | tr '}' '\n'  | awk -F: '{print $3}' | tail -1) && tag=$((tag+1))
        # shell: bash

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/blog-vue:1
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
        

  build:
    name: Build Project ‚õè
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@master
        
      - name: Install dependencies
        run: npm install
        
      - name: Build dependencies
        run: npm run build
        
      - name: Archive production artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
          
  deploy:
    name: Deploy Project üöÄ
    needs: build
    runs-on: ubuntu-latest
    steps: 

      - name: Download artifact
        uses: actions/download-artifact@master
        with: 
          name: dist
          
      - name: Sync files to hosting
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with: 
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
